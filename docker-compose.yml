services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: desafio-dev-api-rest-app
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
        restart: true
      rabbitmq:
        condition: service_healthy
        restart: true
  db:
    image: postgres:13
    container_name: 'desafio-dev-api-rest-db'
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - './tmp/db/data:/var/lib/postgresql/data'
    environment:
      - POSTGRES_DB=database
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: pg_isready --username=user --dbname=database
      interval: 1s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: heidiks/rabbitmq-delayed-message-exchange:latest
    container_name: desafio-dev-api-rest-rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 5
